{"version":3,"file":"static/js/858.d74b173e.chunk.js","mappings":"iZAaA,MAAMA,EAAQ,CAAC,mBAAoB,sBAAuB,YAqX1D,EAnXmCC,KACjC,MAAOC,EAAcC,IAAmBC,EAAAA,EAAAA,UAA+B,CACrEC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,UAAW,GACXC,SAAU,GACVC,YAAa,GACbC,UAAW,CAAC,YACZC,gBAAiB,CAAC,oBAClBC,kBAAmB,CACjBC,GAAI,EACJC,OAAQ,EACRP,UAAW,GACXC,SAAU,GACVC,YAAa,GACbH,MAAO,GACPS,OAAQ,GACRC,QAAS,GACTC,YAAaC,MACbC,OAAQ,SACRC,YAAa,OAGVC,EAAiBC,IAAsBnB,EAAAA,EAAAA,UAAiB,KACxDoB,EAAOC,IAAYrB,EAAAA,EAAAA,UAAiB,KACpCsB,EAAYC,IAAiBvB,EAAAA,EAAAA,UAAS,IACtCwB,EAASC,IAAczB,EAAAA,EAAAA,UAAsB,IAAI0B,MAEjDC,EAAUC,KADAC,EAAAA,EAAAA,OACe7B,EAAAA,EAAAA,WAAkB,KAC3C8B,EAAYC,IAAiB/B,EAAAA,EAAAA,WAAkB,GAMhDgC,EAAqBC,IACzB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAMG,OAC9BrC,GAAiBsC,IAAQ,IAAWA,EAAU,CAACH,GAAOC,KAAS,EAG3DG,EAAmBL,IACvB,MAAM,KAAEC,EAAI,MAAEC,GAAUF,EAAMG,OAC9BrC,GAAiBsC,IAAQ,IACpBA,EACH5B,kBAAmB,IACd4B,EAAS5B,kBACZ,CAACyB,GAAOC,MAET,EAmDL,OACEI,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,UAAU,YAAWC,UAC9BC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACH,UAAU,OAAMC,SAAA,EACpBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,MAAKC,SAAA,EAClBH,EAAAA,EAAAA,KAACM,EAAAA,EAAM,CAACJ,UAAU,SAAQC,UACxBH,EAAAA,EAAAA,KAACO,EAAAA,EAAa,OAEhBP,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACC,UAAU,KAAKC,QAAQ,KAAIP,SAAC,aAGvCtB,IAASmB,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACG,MAAM,QAAOR,SAAEtB,QAEvCuB,EAAAA,EAAAA,MAAA,QAAMF,UAAU,OAAOU,SAjCRC,UACnBnB,EAAMoB,iBACNC,QAAQC,IAAI,wBAMZ,IACE,MAAMC,QAAiBC,EAAAA,EAAAA,GAAS3D,GAChCwD,QAAQC,IAAIC,GACZ5B,GAAY,GACZ8B,YAAW,KACT9B,GAAY,EAAM,GAEjB,IACL,CAAE,MAAO+B,GACPtC,EAASsC,EAAIC,SAAW,yCAC1B,GAemDC,YAAU,EAAAnB,SAAA,EACvDH,EAAAA,EAAAA,KAACuB,EAAAA,EAAO,CAACxC,WAAYA,EAAYyC,YAAY,aAAYrB,SACtD9C,EAAMoE,KAAI,CAACC,EAAOC,KACjB3B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAI,CAAAzB,UACHH,EAAAA,EAAAA,KAAC6B,EAAAA,EAAS,CAAA1B,SAAEuB,KADHA,QAKftB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,eAAcC,SAAA,CACX,IAAfpB,IACCqB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,OAAK0B,MAAO,CAAEC,QAAS,OAAQC,IAAK,QAAS7B,SAAA,EAC3CH,EAAAA,EAAAA,KAACiC,EAAAA,EAAS,CACRvB,QAAQ,WACRwB,OAAO,SACPC,UAAQ,EACRhE,GAAG,YACHuD,MAAM,aACN/B,KAAK,YACLyC,aAAa,YACbxC,MAAOrC,EAAaM,UACpBwE,SAAU5C,EACV6C,WAAS,KAEXtC,EAAAA,EAAAA,KAACiC,EAAAA,EAAS,CACRvB,QAAQ,WACRwB,OAAO,SACPC,UAAQ,EACRhE,GAAG,WACHuD,MAAM,YACN/B,KAAK,WACLyC,aAAa,WACbxC,MAAOrC,EAAaO,SACpBuE,SAAU5C,EACV6C,WAAS,QAGblC,EAAAA,EAAAA,MAAA,OAAK0B,MAAO,CAAEC,QAAS,OAAQC,IAAK,QAAS7B,SAAA,EAC3CH,EAAAA,EAAAA,KAACiC,EAAAA,EAAS,CACRvB,QAAQ,WACRwB,OAAO,SACPC,UAAQ,EACRhE,GAAG,QACHuD,MAAM,gBACN/B,KAAK,QACLyC,aAAa,QACbxC,MAAOrC,EAAaK,MACpByE,SAAU5C,EACV6C,WAAS,KAEXtC,EAAAA,EAAAA,KAACiC,EAAAA,EAAS,CACRvB,QAAQ,WACRwB,OAAO,SACPC,UAAQ,EACRhE,GAAG,cACHuD,MAAM,eACN/B,KAAK,cACLyC,aAAa,cACbxC,MAAOrC,EAAaQ,YACpBsE,SAAU5C,EACV6C,WAAS,QAGblC,EAAAA,EAAAA,MAAA,OAAK0B,MAAO,CAAEC,QAAS,OAAQC,IAAK,QAAS7B,SAAA,EAC3CH,EAAAA,EAAAA,KAACiC,EAAAA,EAAS,CACRvB,QAAQ,WACRwB,OAAO,SACPC,UAAQ,EACRhE,GAAG,WACHuD,MAAM,WACN/B,KAAK,WACLyC,aAAa,WACbxC,MAAOrC,EAAaG,SACpB2E,SAAU5C,EACV6C,WAAS,KAEXtC,EAAAA,EAAAA,KAACiC,EAAAA,EAAS,CACRvB,QAAQ,WACRwB,OAAO,SACPC,UAAQ,EACRxC,KAAK,WACL+B,MAAM,WACNa,KAAK,WACLpE,GAAG,WACHiE,aAAa,mBACbxC,MAAOrC,EAAaI,SACpB0E,SAAU5C,EACV6C,WAAS,UAKD,IAAfvD,IACCqB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,OACE0B,MAAO,CAAEC,QAAS,OAAQC,IAAK,OAAQQ,UAAW,QAASrC,SAAA,EAE3DC,EAAAA,EAAAA,MAACqC,EAAAA,EAAW,CAAChC,UAAU,WAAW6B,WAAS,EAAAnC,SAAA,EACzCH,EAAAA,EAAAA,KAAC0C,EAAAA,EAAS,CAAAvC,SAAC,YACXH,EAAAA,EAAAA,KAAC2C,EAAAA,EAAU,CACT,aAAW,SACXhD,KAAK,SACLC,MAAOrC,EAAaW,kBAAkBG,OACtCgE,SAAUtC,EAAgBI,UAE1BC,EAAAA,EAAAA,MAAA,OAAK0B,MAAO,CAAEC,QAAS,QAAS5B,SAAA,EAC9BH,EAAAA,EAAAA,KAAC4C,EAAAA,EAAgB,CACfhD,MAAM,OACNiD,SAAS7C,EAAAA,EAAAA,KAAC8C,EAAAA,EAAK,IACfpB,MAAM,UAER1B,EAAAA,EAAAA,KAAC4C,EAAAA,EAAgB,CACfhD,MAAM,SACNiD,SAAS7C,EAAAA,EAAAA,KAAC8C,EAAAA,EAAK,IACfpB,MAAM,oBAKdtB,EAAAA,EAAAA,MAACqC,EAAAA,EAAW,CAAChC,UAAU,WAAW6B,WAAS,EAAAnC,SAAA,EACzCH,EAAAA,EAAAA,KAAC0C,EAAAA,EAAS,CAAAvC,SAAC,kBACXH,EAAAA,EAAAA,KAAC2C,EAAAA,EAAU,CACT,aAAW,cACXhD,KAAK,cACLC,MAAOrC,EAAaW,kBAAkBQ,YACtC2D,SAAUtC,EAAgBI,UAE1BC,EAAAA,EAAAA,MAAA,OAAK0B,MAAO,CAAEC,QAAS,QAAS5B,SAAA,EAC9BH,EAAAA,EAAAA,KAAC4C,EAAAA,EAAgB,CACfhD,MAAM,SACNiD,SAAS7C,EAAAA,EAAAA,KAAC8C,EAAAA,EAAK,IACfpB,MAAM,YAER1B,EAAAA,EAAAA,KAAC4C,EAAAA,EAAgB,CACfhD,MAAM,UACNiD,SAAS7C,EAAAA,EAAAA,KAAC8C,EAAAA,EAAK,IACfpB,MAAM,wBAMhBtB,EAAAA,EAAAA,MAAA,OAAK0B,MAAO,CAAEC,QAAS,OAAQC,IAAK,QAAS7B,SAAA,EAC3CH,EAAAA,EAAAA,KAACiC,EAAAA,EAAS,CACRvB,QAAQ,WACRwB,OAAO,SACPC,UAAQ,EACRhE,GAAG,UACHuD,MAAM,UACN/B,KAAK,UACLyC,aAAa,UACbxC,MAAOrC,EAAaW,kBAAkBI,QACtC+D,SAAUtC,EACVuC,WAAS,KAG5BtC,EAAAA,EAAAA,KAAC+C,EAAAA,EAAoB,CAACC,YAAaC,EAAAA,EAAa9C,UAC3CH,EAAAA,EAAAA,KAACkD,EAAAA,EAAU,CACTxB,MAAM,gBACN9B,MAAOrC,EAAaW,kBAAkBK,YACtC8D,SA5NoBc,IACxB3F,GAAgBsC,IAAQ,IACnBA,EACH5B,kBAAmB,IACd4B,EAAS5B,kBACZK,YAAiB,OAAJ4E,QAAI,IAAJA,EAAAA,EAAQ3E,UAEtB,EAsNC4E,MAAO,CAELC,UAAWpB,EAAAA,GAEbqB,UAAW,CACTD,UAAW,CACTf,WAAW,EACX5B,QAAS,WACTwB,OAAQ,SACRC,UAAU,cASM,IAAfpD,IACCiB,EAAAA,EAAAA,KAAA,OAAAG,UACEH,EAAAA,EAAAA,KAAA,OAAK8B,MAAO,CAAEU,UAAW,OAAQe,aAAc,QAASpD,UACtDC,EAAAA,EAAAA,MAACoD,EAAAA,EAAM,CACL/C,UAAU,QACVgD,UAAMC,EACNhD,QAAQ,YACRoB,MAAO,CACLU,UAAW,OACXT,QAAS,OACT4B,eAAgB,UAElBC,UAAW,EACXC,WAAW7D,EAAAA,EAAAA,KAAC8D,EAAAA,EAAe,IAAI3D,SAAA,CAChC,gBAECH,EAAAA,EAAAA,KAAA,SACEuC,KAAK,OAELT,MAAO,CAAEC,QAAS,QAClBgC,UAAQ,WAMjB3E,IACCY,EAAAA,EAAAA,KAACK,EAAAA,EAAI,CACHH,UAAU,oBACV4B,MAAO,CACLkC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,OAAQ,GACRC,MAAO,QACPC,QAAS,OACTC,UAAW,gCACXpE,UAEFC,EAAAA,EAAAA,MAACoE,EAAAA,EAAG,CAACC,GAAI,CAAEC,EAAG,GAAIvE,SAAA,EAChBH,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAACE,QAAQ,KAAIP,SAAC,aACzBH,EAAAA,EAAAA,KAACQ,EAAAA,EAAU,CAAAL,SAAC,4CAIlBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qBAAoBC,SAAA,EACjCH,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,CACLmB,SAAyB,IAAf5F,EACV6F,QAzQKC,KACjB7F,GAAe8F,GAAmBA,EAAiB,GAAE,EAyQzChD,MAAO,CAAEiD,MAAO,QAChBrE,QAAQ,WAAUP,SACnB,SAIApB,IAAe1B,EAAM2H,OAAS,GAC7BhF,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,CAACjB,KAAK,SAAS7B,QAAQ,YAAYR,UAAU,OAAMC,SAAC,YAI3DH,EAAAA,EAAAA,KAACwD,EAAAA,EAAM,CACL9C,QAAQ,YACRR,UAAU,OACV0E,QApSGK,KACjBlE,QAAQC,IAAI,sBAEZ,IAAIkE,EAAajG,EAhCIkG,QAiCHpG,EAjCoBE,EAAQmG,IAAID,KAkChDD,EAAa,IAAI/F,IAAI+F,EAAWG,UAChCH,EAAWI,OAAOvG,IAEpBC,GAAe8F,GAAmBA,EAAiB,IACnD5F,EAAWgG,EAAW,EA4RRP,SAAU5F,IAAe1B,EAAM2H,OAAS,EACxClD,MAAO,CAAEiD,MAAO,SAChBxC,KAAK,SAAQpC,SAEZpB,IAAe1B,EAAM2H,OAAS,EAAI,SAAW,sBAOhD,C,kCC3XhB,MAAMO,E,QAAqBC,EAAMC,OAAO,CACtCC,QAASC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,wBAA0B,gCAM/CC,QAAS,CACP,eAAgB,sBAKpBN,EAAIO,aAAaC,QAAQC,KACtBC,IACC,MAAMC,EAAQC,aAAaC,QAAQ,aAInC,OAHIF,IACFD,EAAOJ,QAAQQ,cAAgB,UAAUH,KAEpCD,CAAM,IAEdpH,GACQyH,QAAQC,OAAO1H,KAK1B0G,EAAIO,aAAa7E,SAAS+E,KACvB/E,GACQA,IAERpC,IACKA,EAAMoC,UAAYpC,EAAMoC,SAASxC,OAI9B6H,QAAQC,OAAO1H,MAW1B,S,uDC9CO,MAAMqC,EAAWL,gBACG0E,EAAAA,EAAIiB,KAA2B,kBAAmBjJ,IACzDkJ,KAKPC,EAAc7F,UACvB,IACE,MAAMI,QAAiBsE,EAAAA,EAAIoB,IAAiB,qBAAqBvI,SAEjE,OADA2C,QAAQC,IAAIC,GACLA,EAASwF,IAClB,CAAE,MAAO5H,GAEP,MADAkC,QAAQlC,MAAM,gCAAiCA,GACzC,IAAI+H,MAAM,kDAClB,E","sources":["components/Customer/CustomerRegistration/CustomerRegisterForm.tsx","services/api.ts","services/customerService.ts"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Avatar, Box, Button, Card, Container, Step, StepLabel, Stepper, TextField, Typography } from \"@mui/material\";\nimport PersonAddIcon from \"@mui/icons-material/PersonAdd\";\nimport { useNavigate } from \"react-router-dom\";\nimport { register } from \"../../../services/customerService\";\nimport { CustomerRegisterForm } from \"../../../Types\";\nimport \"./CustomerRegisterForm.css\";\nimport { AdapterDayjs } from \"@mui/x-date-pickers/AdapterDayjs\";\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\nimport { RadioGroup, FormControlLabel, Radio, FormControl, FormLabel } from \"@mui/material\";\nimport CloudUploadIcon from \"@mui/icons-material/CloudUpload\";\nimport dayjs, { Dayjs } from \"dayjs\";\n\nconst steps = [\"User Information\", \"Contact Information\", \"Document\"];\n\nconst CustomerRegister: React.FC = () => {\n  const [registerForm, setRegisterForm] = useState<CustomerRegisterForm>({\n    username: \"\",\n    password: \"\",\n    email: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    phoneNumber: \"\",\n    roleNames: [\"CUSTOMER\"],\n    permissionNames: [\"PERMISSION_WRITE\"],\n    createCustomerDto: {\n      id: 0,\n      userId: 0,\n      firstName: \"\",\n      lastName: \"\",\n      phoneNumber: \"\",\n      email: \"\",\n      gender: \"\",\n      address: \"\",\n      dateOfBirth: dayjs(),\n      status: \"Active\",\n      accountType: \"\",\n    },\n  });\n  const [confirmPassword, setConfirmPassword] = useState<string>(\"\");\n  const [error, setError] = useState<string>(\"\");\n  const [activeStep, setActiveStep] = useState(0);\n  const [skipped, setSkipped] = useState<Set<number>>(new Set());\n  const navigate = useNavigate();\n  const [showCard, setShowCard] = useState<boolean>(false);\n  const [showButton, setShowButton] = useState<boolean>(false);\n\n  const isStepOptional = (step: number) => step === 1;\n\n  const isStepSkipped = (step: number) => skipped.has(step);\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    setRegisterForm((prevForm) => ({ ...prevForm, [name]: value }));\n  };\n\n  const handleDtoChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    setRegisterForm((prevForm) => ({\n      ...prevForm,\n      createCustomerDto: {\n        ...prevForm.createCustomerDto,\n        [name]: value,\n      },\n    }));\n  };\n\n  const handleDateChange = (date: Dayjs | null) => {\n    setRegisterForm(prevForm => ({\n      ...prevForm,\n      createCustomerDto: {\n        ...prevForm.createCustomerDto,\n        dateOfBirth: date ?? dayjs()\n      }\n    }));\n  };\n  \n\n  const handleNext = () => {\n    console.log(\"handle next called\");\n\n    let newSkipped = skipped;\n    if (isStepSkipped(activeStep)) {\n      newSkipped = new Set(newSkipped.values());\n      newSkipped.delete(activeStep);\n    }\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n    setSkipped(newSkipped);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n    console.log(\"handle submit called\");\n\n    // if (registerForm.password !== confirmPassword) {\n    //   setError('Passwords do not match');\n    //   return;\n    // }\n    try {\n      const response = await register(registerForm);\n      console.log(response);\n      setShowCard(true);\n      setTimeout(() => {\n        setShowCard(false);\n        // navigate(\"/login\"); // Redirect to the desired page\n      }, 5000);\n    } catch (err: any) {\n      setError(err.message || \"Registration failed. Please try again.\");\n    }\n  };\n\n  return (\n    <Container className=\"container\">\n      <Card className=\"card\">\n        <div className=\"tag\">\n          <Avatar className=\"avatar\">\n            <PersonAddIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Register\n          </Typography>\n          {error && <Typography color=\"error\">{error}</Typography>}\n        </div>\n        <form className=\"form\" onSubmit={handleSubmit} noValidate>\n          <Stepper activeStep={activeStep} orientation=\"horizontal\">\n            {steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <div className=\"step-content\">\n            {activeStep === 0 && (\n              <div>\n                <div style={{ display: \"flex\", gap: \"16px\" }}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    id=\"firstName\"\n                    label=\"First Name\"\n                    name=\"firstName\"\n                    autoComplete=\"firstName\"\n                    value={registerForm.firstName}\n                    onChange={handleInputChange}\n                    fullWidth\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    id=\"lastName\"\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    autoComplete=\"lastName\"\n                    value={registerForm.lastName}\n                    onChange={handleInputChange}\n                    fullWidth\n                  />\n                </div>\n                <div style={{ display: \"flex\", gap: \"16px\" }}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    id=\"email\"\n                    label=\"Email Address\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    value={registerForm.email}\n                    onChange={handleInputChange}\n                    fullWidth\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    id=\"phoneNumber\"\n                    label=\"Phone Number\"\n                    name=\"phoneNumber\"\n                    autoComplete=\"phoneNumber\"\n                    value={registerForm.phoneNumber}\n                    onChange={handleInputChange}\n                    fullWidth\n                  />\n                </div>\n                <div style={{ display: \"flex\", gap: \"16px\" }}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    id=\"username\"\n                    label=\"Username\"\n                    name=\"username\"\n                    autoComplete=\"username\"\n                    value={registerForm.username}\n                    onChange={handleInputChange}\n                    fullWidth\n                  />\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    value={registerForm.password}\n                    onChange={handleInputChange}\n                    fullWidth\n                  />\n                </div>\n              </div>\n            )}\n            {activeStep === 1 && (\n              <div>\n                <div\n                  style={{ display: \"flex\", gap: \"16px\", marginTop: \"10px\" }}\n                >\n                  <FormControl component=\"fieldset\" fullWidth>\n                    <FormLabel>Gender</FormLabel>\n                    <RadioGroup\n                      aria-label=\"gender\"\n                      name=\"gender\"\n                      value={registerForm.createCustomerDto.gender}\n                      onChange={handleDtoChange}\n                    >\n                      <div style={{ display: \"flex\" }}>\n                        <FormControlLabel\n                          value=\"Male\"\n                          control={<Radio />}\n                          label=\"Male\"\n                        />\n                        <FormControlLabel\n                          value=\"Female\"\n                          control={<Radio />}\n                          label=\"Female\"\n                        />\n                      </div>\n                    </RadioGroup>\n                  </FormControl>\n                  <FormControl component=\"fieldset\" fullWidth>\n                    <FormLabel>Account Type</FormLabel>\n                    <RadioGroup\n                      aria-label=\"accounttype\"\n                      name=\"accountType\"\n                      value={registerForm.createCustomerDto.accountType}\n                      onChange={handleDtoChange}\n                    >\n                      <div style={{ display: \"flex\" }}>\n                        <FormControlLabel\n                          value=\"SAVING\"\n                          control={<Radio />}\n                          label=\"SAVING\"\n                        />\n                        <FormControlLabel\n                          value=\"CURRENT\"\n                          control={<Radio />}\n                          label=\"CURRENT\"\n                        />\n                      </div>\n                    </RadioGroup>\n                  </FormControl>\n                </div>\n                <div style={{ display: \"flex\", gap: \"16px\" }}>\n                  <TextField\n                    variant=\"outlined\"\n                    margin=\"normal\"\n                    required\n                    id=\"address\"\n                    label=\"Address\"\n                    name=\"address\"\n                    autoComplete=\"address\"\n                    value={registerForm.createCustomerDto.address}\n                    onChange={handleDtoChange}\n                    fullWidth\n                  />\n\n <LocalizationProvider dateAdapter={AdapterDayjs}>\n      <DatePicker\n        label=\"Date of Birth\"\n        value={registerForm.createCustomerDto.dateOfBirth}\n        onChange={handleDateChange}\n        slots={{\n          // Customize the input component used in the DatePicker\n          textField: TextField\n        }}\n        slotProps={{\n          textField: {\n            fullWidth: true,\n            variant: 'outlined',\n            margin: 'normal',\n            required: true\n          }\n        }}\n      />\n    </LocalizationProvider>\n\n                </div>\n              </div>\n            )}\n            {activeStep === 2 && (\n              <div>\n                <div style={{ marginTop: \"20px\", marginBottom: \"20px\" }}>\n                  <Button\n                    component=\"label\"\n                    role={undefined}\n                    variant=\"contained\"\n                    style={{\n                      marginTop: \"20px\",\n                      display: \"flex\",\n                      justifyContent: \"center\",\n                    }}\n                    tabIndex={-1}\n                    startIcon={<CloudUploadIcon />}\n                  >\n                    Upload files\n                    <input\n                      type=\"file\"\n                      // onClick={uploadDoc}\n                      style={{ display: \"none\" }}\n                      multiple\n                    />\n                  </Button>\n                </div>\n              </div>\n            )}\n            {showCard && (\n              <Card\n                className=\"notification-card\"\n                style={{\n                  position: \"absolute\",\n                  top: \"50%\",\n                  left: \"50%\",\n                  transform: \"translate(-50%, -50%)\",\n                  zIndex: 10,\n                  width: \"300px\",\n                  padding: \"16px\",\n                  boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.2)\",\n                }}\n              >\n                <Box sx={{ p: 2 }}>\n                  <Typography variant=\"h6\">Success</Typography>\n                  <Typography>Your registration was successful!</Typography>\n                </Box>\n              </Card>\n            )}\n            <div className=\"navigation-buttons\">\n              <Button\n                disabled={activeStep === 0}\n                onClick={handleBack}\n                style={{ float: \"left\" }}\n                variant=\"outlined\"\n              >\n                Back\n              </Button>\n\n              {activeStep === steps.length - 1 ? (\n                <Button type=\"submit\" variant=\"contained\" className=\"next\">\n                  Submit\n                </Button>\n              ) : (\n                <Button\n                  variant=\"contained\"\n                  className=\"next\"\n                  onClick={handleNext}\n                  disabled={activeStep === steps.length - 1}\n                  style={{ float: \"right\" }}\n                  type=\"button\"\n                >\n                  {activeStep === steps.length - 2 ? \"Submit\" : \"Next\"}\n                </Button>\n              )}\n            </div>\n          </div>\n        </form>\n      </Card>\n    </Container>\n  );\n};\n\nexport default CustomerRegister;\n","import axios, { AxiosInstance, AxiosResponse, AxiosError } from 'axios';\n\n// Create an Axios instance\nconst api: AxiosInstance = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL || 'http://192.168.1.100:9093/api'  ,// Base URL for your API\n\n  // baseURL: 'http://192.168.1.100:909yar3/api',\n\n  // baseURL: process.env.REACT_APP_API_BASE_URL,\n  \n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add token to headers\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('authToken'); // Retrieve the token from local storage or a state management library\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`; // Add the token to the Authorization header\n    }\n    return config;\n  },\n  (error: AxiosError) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle responses\napi.interceptors.response.use(\n  (response: AxiosResponse): AxiosResponse => {\n    return response;\n  },\n  (error: AxiosError) => {\n    if (error.response && error.response.status === 401) {\n      // Handle unauthorized responses (e.g., token expired)\n      // Redirect to login page or show an alert\n    }\n    return Promise.reject(error);\n  }\n);\n\n\nexport interface ApiResponse<T> {\n  success: boolean;\n  data: T;\n  message: string | null;\n}\n\nexport default api;\n\n\n\n","import { CustomerRegisterForm , GetCustomer} from \"../Types\";\nimport api from \"./api\";\n\n// API call for customer registration\nexport const register = async (registerForm: CustomerRegisterForm): Promise<CustomerRegisterForm> => {\n    const response = await api.post<CustomerRegisterForm>('/users/customer', registerForm);\n    return response.data;\n};\n\n\n// API call for fetching customer details by userId\nexport const getCustomer = async (userId: number): Promise<GetCustomer | null> => {\n    try {\n      const response = await api.get<GetCustomer>(`/customer-service/${userId}/get`);\n      console.log(response);  // Can be removed in production\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching customer data:\", error);\n      throw new Error(\"Error fetching customer data. Please try again.\");\n    }\n  };"],"names":["steps","CustomerRegister","registerForm","setRegisterForm","useState","username","password","email","firstName","lastName","phoneNumber","roleNames","permissionNames","createCustomerDto","id","userId","gender","address","dateOfBirth","dayjs","status","accountType","confirmPassword","setConfirmPassword","error","setError","activeStep","setActiveStep","skipped","setSkipped","Set","showCard","setShowCard","useNavigate","showButton","setShowButton","handleInputChange","event","name","value","target","prevForm","handleDtoChange","_jsx","Container","className","children","_jsxs","Card","Avatar","PersonAddIcon","Typography","component","variant","color","onSubmit","async","preventDefault","console","log","response","register","setTimeout","err","message","noValidate","Stepper","orientation","map","label","index","Step","StepLabel","style","display","gap","TextField","margin","required","autoComplete","onChange","fullWidth","type","marginTop","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","LocalizationProvider","dateAdapter","AdapterDayjs","DatePicker","date","slots","textField","slotProps","marginBottom","Button","role","undefined","justifyContent","tabIndex","startIcon","CloudUploadIcon","multiple","position","top","left","transform","zIndex","width","padding","boxShadow","Box","sx","p","disabled","onClick","handleBack","prevActiveStep","float","length","handleNext","newSkipped","step","has","values","delete","api","axios","create","baseURL","process","REACT_APP_API_BASE_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","Promise","reject","post","data","getCustomer","get","Error"],"sourceRoot":""}